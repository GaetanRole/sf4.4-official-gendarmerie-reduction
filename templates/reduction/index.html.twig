{# @todo Cut JS script in external script files #}
{% extends 'base.html.twig' %}

{% block og_title 'reduction.index.head.meta.title'|trans %}
{% block title 'reduction.index.head.meta.title'|trans %}

{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet">
    <style>
        .tmp-css .form-group{margin-bottom:0!important}.tmp-css label{padding:0!important}.tmp-css small{font-size:.85rem}
    </style>
{% endblock %}

{% block content_id 'reduction-index' %}
{% block content -%}
    <section class="bg-white box-shadow text-center mt-5 p-5">
        <div class="container-fluid">
            <h1 class="sr-only">{{ 'reduction.index.body.h1'|trans }}</h1>
            {{ form_start(form) }}
            <div class="row text-dark lead p-5">
                <div class="col-lg-3 offset-lg-3">
                    {{ form_row(form.method[0], { 'label_attr': { 'class': 'font-weight-light' } }) }}
                </div>
                <div class="col-lg-3 tmp-css">
                    {{ form_row(form.method[1], { 'label_attr': { 'class': 'font-weight-light disabled' } }) }}
                    <small class="text-info">Cette fonctionnalit√© arrive prochainement !</small>
                </div>
            </div>
            <div class="search-bar row p-4 mb-5">
                <div class="col-lg-10">
                    <div class="row">
                        <div class="col-md-4">
                            {{ form_row(form.region, { 'help': '' }) }}
                        </div>
                        <div class="col-md-4">
                            {{ form_row(form.department, { 'help': '' }) }}
                        </div>
                        <div class="col-md-4">
                            {{ form_row(form.municipality, { 'help': '' }) }}
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 vertical-center">
                    <button type="submit" class="search-btn"><i class="fas fa-search"></i> {{ 'btn.search'|trans }}</button>
                </div>
            </div>
            {{ form_end(form) }}
            <a class="btn btn-sm btn-dark" href="{{ path('app_reduction_post') }}" title="{{ 'link.reduction.post.title'|trans }}"><i class="fas fa-plus"></i>&nbsp;{{ 'link.reduction.post'|trans }}</a>
        </div>
    </section>

    <section class="bg-grey p-5 mb-5">
        <div class="container">
            <div id="search-results">
                <div class="row">
                    <div class="col-md-12">
                        <div class="bg-white card text-center p-5">
                            <h3 class="lead font-weight-light">
                                {{ 'reduction.empty'|trans }}
                            </h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
    <script>
        // Handle click event after an asynchronous Ajax request.
        $(document).on('click', '.link-callback', function(e){
            e.preventDefault();
            let tag = $(e.currentTarget);
            ajaxRequestCallback($("#search-form").attr('action'), tag.attr("href"), tag.data('pagination'));
        });

        // Catch form submit and do an Ajax request.
        $("#search-form").submit(function(e) {
            e.preventDefault();
            let form = $(e.currentTarget);
            ajaxRequestCallback(form.attr('action'), form.serialize(), 1);
        });

        let ajaxRequestCallback = (action, data, page) => {
            $.ajax({
                url: action,
                method: 'GET',
                data: data+'&search%5Bpage%5D='+page,
                success: function(data) {$('#search-results').html(data);},
                complete: function() {$('html, body').stop().animate({scrollTop: '+='+$('#search-title').offset().top}, 'fast');},
            });
        };
    </script>
    <script>
        $('select[data-select]').select2();

        const regionSelect = $('#search_region');
        const departmentSelect = $('#search_department');
        const municipalitySelect = $('#search_municipality');

        let disableDepartmentAndMunicipalitySelectFields = () => {
            $($(departmentSelect).data('select2').$container).addClass('disabled');
            $($(municipalitySelect).data('select2').$container).addClass('disabled');
        };

        let hideDepartmentAndMunicipalitySelectFields = () => {
            municipalitySelect.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans }}</option>');
            departmentSelect.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans }}</option>');
            disableDepartmentAndMunicipalitySelectFields();
        };

        let setDataAccordingToOneField = (name, currentSelector, data) => {
            if (currentSelector === departmentSelect) {
                municipalitySelect.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans }}</option>');
            }
            $($(currentSelector).data('select2').$container).removeClass('disabled');
            currentSelector.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans }}</option>');
            $.each(data, (key, value) => {
                currentSelector.append('<option value="' + value + '">' + key + '</option>');
            });
        };

        let ajaxCallback = (name, selector, dataValue) => {
            $.ajax({
                url: selector.data('autocomplete-' + name + '-url'),
                type: "GET",
                dataType: "JSON",
                data: { search: dataValue },
                success: (data) => { setDataAccordingToOneField(name, selector, data); },
            });
        };

        disableDepartmentAndMunicipalitySelectFields();

        regionSelect.change(function () {
            disableDepartmentAndMunicipalitySelectFields();
            // If International or National is selected, hide others select fields
            ($(this).val() === 'International' || $(this).val() === 'National') ?
                hideDepartmentAndMunicipalitySelectFields() : ajaxCallback('department', departmentSelect, $(this).val());
        });
        departmentSelect.change(function () { ajaxCallback('municipality', municipalitySelect, $(this).val()); });
    </script>
{% endblock %}
