{% extends 'base.html.twig' %}

{% block title %}{{ 'reduction.new.head.meta.title'|trans }}{% endblock %}

{% block stylesheets %}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.7/css/select2.min.css" rel="stylesheet">
    <style>
        form {margin-bottom: 150px;}
    </style>
{% endblock %}

{% block body_id 'reduction-new' %}

{% block body %}
    <section>

        {% include 'default/_flash_messages.html.twig' %}

        <div class="container">
            <div class="row mb-4">
                <div class="col">
                    <h1>{{ 'reduction.new.body.h1'|trans }}</h1>

                    {{ include('reduction/_form.html.twig') }}
                    <a href="{{ path('app_reduction_index') }}">{{ 'link.reduction.index'|trans }}</a>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.7/js/select2.min.js"></script>
    <script>
        $('select[data-select]').select2();

        const regionSelect = $('#reduction_region');
        const departmentSelect = $('#reduction_department');
        const municipalitySelect = $('#reduction_municipality');
        const departmentDivSelect = $('#reduction div:nth-child(7)');
        const municipalityDivSelect = $('#reduction div:nth-child(8)');

        let hideDepartmentAndMunicipalitySelectField = () => {
            departmentDivSelect.fadeOut('slow');
            municipalityDivSelect.fadeOut('slow');
            municipalitySelect.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans() }}</option>');
            departmentSelect.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans() }}</option>');
        };

        let showDepartmentAndMunicipalitySelectField = () => {
            departmentDivSelect.fadeIn('slow');
            municipalityDivSelect.fadeIn('slow');
        };

        let setDataAccordingToOneField = (name, currentSelector, data) => {
            if (currentSelector === departmentSelect) {
                municipalitySelect.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans() }}</option>');
            }
            currentSelector.html('').append('<option value="">{{ 'region.form.geo.select.option'|trans() }}</option>');
            $.each(data, (key, value) => {
                currentSelector.append('<option value="' + value + '">' + key + '</option>');
            });
        };

        let ajaxCallback = (name, selector, dataValue) => {
            showDepartmentAndMunicipalitySelectField();
            $.ajax({
                url: selector.data('autocomplete-' + name + '-url'),
                type: "GET",
                dataType: "JSON",
                data: { search: dataValue },
                success: (data) => { setDataAccordingToOneField(name, selector, data); },
            });
        };

        regionSelect.change(function () {
            // If International or National is selected, hide others select fields
            ($(this).val() === 'International' || $(this).val() === 'National') ?
                hideDepartmentAndMunicipalitySelectField() : ajaxCallback('department', departmentSelect, $(this).val());
        });
        departmentSelect.change(function () { ajaxCallback('municipality', municipalitySelect, $(this).val()); });
    </script>
{% endblock %}
